version: "3.8"

services:
  chat-worker:
    image: chat-worker
    depends_on:
      kafka-broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      API_SERVICE_URL: "http://load-balancer"
      API_AUTHENTICATION_TOKEN: "my-service-token"
      MONGO_URL: "mongodb://mongo:27017"
      MONGO_DATABASE: "chat-worker"

  mongo:
    image: mongo
    ports:
      - 27017:27017

  zookeeper:
    image: zookeeper
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 zookeeper:2181"
      start_period: 5s
      interval: 5s
      timeout: 3s
    environment:
      ZOO_LOG4J_PROP: ERROR,CONSOLE
    volumes:
      - "./docker-compose/scripts:/opt/scripts"

  kafka-broker:
    image: confluentinc/cp-kafka
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 kafka-broker:9092"
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
    volumes:
      - "./docker-compose/scripts:/opt/scripts"

  schema-registry:
    image: confluentinc/cp-schema-registry
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 schema-registry:8081"
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      kafka-broker:
        condition: service_healthy
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-broker:9092"
    volumes:
      - "./docker-compose/scripts:/opt/scripts"

  schema-registry-ui:
    image: landoop/schema-registry-ui
    healthcheck:
      test: "/opt/scripts/wait-for -t 3 schema-registry-ui:8000"
      start_period: 10s
      interval: 10s
      timeout: 5s
    depends_on:
      schema-registry:
        condition: service_healthy
    ports:
      - 8000:8000
    environment:
      SCHEMAREGISTRY_URL: "http://schema-registry:8081"
      PROXY: "true"
    volumes:
      - "./docker-compose/scripts:/opt/scripts"